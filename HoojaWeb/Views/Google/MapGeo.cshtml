@{
    ViewData["Title"] = "Index";
}

<h1>Hooja AB Webshop</h1>

@{
    string apiKey = Environment.GetEnvironmentVariable("API_KEY_GOOGLE");
}

<html>
<head>
    <title>Add Map</title>
    <style>
        #map {
            width: 100%;
            height: 500px;
            background-color: gray;
        }
    </style>
</head>
<body>
    <!--The div element for the map -->
    <div id="map"></div>
    <script>
        // Initialize and add the map
        let map;

        async function initMap() {
            // Request needed libraries.
            const { Map } = await google.maps.importLibrary("maps");
            const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

            // The map, centered at user's location
            map = new Map(document.getElementById("map"), {
                zoom: 10,
                center: { lat: 0, lng: 0 },
                mapId: "DEMO_MAP_ID",
            });

            // Get user's current location using geolocation
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const userLocation = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude,
                        };
                        map.setCenter(userLocation);

                        // The marker, positioned at user's location
                        const marker = new AdvancedMarkerElement({
                            map: map,
                            position: userLocation,
                            title: "Your Location",
                        });

                        // Create an info window
                        const infoWindow = new google.maps.InfoWindow({
                            content: "HoojaAB Webshop crew member",
                        });

                        // Show info window when marker is clicked
                        marker.addListener("click", () => {
                            infoWindow.open(map, marker);
                        });
                    },
                    () => {
                        handleLocationError(true);
                    }
                );
            } else {
                // Browser doesn't support geolocation
                handleLocationError(false);
            }
        }

        function handleLocationError(browserHasGeolocation) {
            const errorDiv = document.createElement("div");
            errorDiv.classList.add("error-message");
            errorDiv.innerText = browserHasGeolocation
                ? "Error: The Geolocation service failed."
                : "Error: Your browser doesn't support geolocation.";

            document.body.appendChild(errorDiv);
        }

        initMap();
    </script>

    <!-- prettier-ignore -->
    <script>
        (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })
            ({ key: "AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg", v: "beta" });
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=@apiKey&callback=initMap" async defer></script>

</body>
</html>
